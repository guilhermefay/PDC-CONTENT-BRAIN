name: Python CI

on:
  push:
    branches: [ main, feat/bootstrap-taskmaster ]
  pull_request:
    branches: [ main, feat/bootstrap-taskmaster ]
  # Adiciona execução agendada (ex: todo Domingo às 3:00 UTC)
  schedule:
    - cron: '0 3 * * 0'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # <<< TEMPORARIAMENTE DESABILITADO: CodeQL Init >>>
    # - name: Initialize CodeQL
    #   uses: github/codeql-action/init@v3
    #   with:
    #     languages: python
    #     # config-file: ./.github/codeql/codeql-config.yml # Opcional: para configuração avançada

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Ajustar se necessário para a versão do projeto
        cache: 'pip' # Habilitar cache de dependências pip

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Assumindo que existe um target 'install-dev' ou similar no Makefile
        make install-dev

    # Teste primeiro
    - name: Test with pytest
      env:
        OPENAI_API_KEY: dummy
        ASSEMBLYAI_API_KEY: dummy
        R2R_BASE_URL: http://dummy
        R2R_API_KEY: dummy
        SUPABASE_URL: http://test.supabase.co
        SUPABASE_SERVICE_ROLE_KEY: dummy
        SUPABASE_JWT_SECRET: dummysecret123456789012345678901234
      run: |
        make test

    # (Passo de cobertura desativado)

    # <<< TEMPORARIAMENTE DESABILITADO: Check test coverage >>>
    # - name: Check test coverage
    #   run: |
    #     # Necessário instalar pytest-cov se não estiver em install-dev
    #     # pip install pytest-cov 
    #     pytest --cov=. --cov-report=xml --cov-fail-under=80 # Gera relatorio XML e falha se < 80%

    # TODO: Opcionalmente adicionar upload para Codecov.io aqui
    # - name: Upload coverage reports to Codecov
    #   uses: codecov/codecov-action@v4.0.1
    #   with:
    #     token: ${{ secrets.CODECOV_TOKEN }} # Necessário configurar segredo no repo
    #     slug: your_org/your_repo # Opcional: Usar se o repo não for detectado automaticamente

    # Lint depois
    - name: Lint with flake8
      run: |
        make lint

    # TODO: Adicionar verificação de formatação se não estiver em make lint
    # - name: Check formatting with Black
    #   run: |
    #     make format-check

    # Auditoria de segurança
    - name: Security Audit Dependencies
      run: |
        # Temporariamente removido pip-audit para simplificar
        # pip install pip-audit
        # pip-audit

    # <<< TEMPORARIAMENTE DESABILITADO: CodeQL Analysis >>>
    # - name: Perform CodeQL Analysis
    #   uses: github/codeql-action/analyze@v3
    #   with:
    #     category: "/language:python"
        
    # REMOVIDO: Passo de Upload do Artefato não aplicável 
    # - name: Upload artifact
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: application-artifact-${{ github.sha }}
    #     path: dist/ 